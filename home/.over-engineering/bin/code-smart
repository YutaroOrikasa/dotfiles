#!/bin/sh

# open a document by a tab or a new window smartly for vscode.
# envvar $CODE_SMART_WAIT (seconds): If you close the opened document tab within this second,
#                                    this script will open the document in a new code window.
#                                    Default: 10.

CODE_SMART_WAIT="${CODE_SMART_WAIT:-10}"

list_child_pids() {
    IFS= read -r ppid
    ps -eo ppid,pid,comm | \
        awk -v ppid=$ppid '$1 == ppid { print $0 > "/dev/stderr"; print $2 }'
}

# $1: code command pid
kill_vscode_app_instance() {
    kill "$(echo $1 | list_child_pids | list_child_pids)" >/dev/null 2>&1
}

code_smart_body() {
    case $# in
        0)
            exec code
            ;;
        1)
            if [ -L "$1" ];then
                set -- "$(dirname "$1")"/"$(readlink "$1")"
            fi
            ;;
    esac

    case "$1" in
        -w|--wait)
            WAIT=1
            shift
            ;;
    esac

    if [ "$WAIT" = 1 ];then
        code_wait_opt=--wait
    fi
    # First vscode instance created when vscode not launched.
    # And
    # When code-smart called with --wait option,
    # by code --wait option a window will be closed when a tab is closed.
    # code-smart --wait emulates code --wait behavior
    (code $code_wait_opt "$@" &)

    sleep "${CODE_SMART_WAIT}" &
    code --wait "$@" &
    code_pid=$(jobs -p %code)
    (sleep $((CODE_SMART_WAIT + 1)); kill_vscode_app_instance $code_pid) &
    wait %code

    # Workaround for bash bug
    jobs >/dev/null 2>&1
    sh -c ''

    # if code tab closed in 10 seconds
    if kill %'sleep' >/dev/null 2>&1 ;then
        sleep 4
        if [ "$WAIT" = 1 ] ;then
            code -n --wait "$@"
        else
            code -n "$@"
        fi
    fi


}

case "$1" in
    -w|--wait)
        code_smart_body "$@"
        ;;
    *)
        code_smart_body "$@"
        ;;
esac
