#!/bin/sh

set -ueC

# option parse
# https://gist.githubusercontent.com/YutaroOrikasa/82708ed2707cd3650998187bd8fc7a6f/raw/581ef8c126d0161aa88adfed2b3fd8cdbaf2b082/template.sh

usage_exit() {
##### Change here #####
    cat <<EOF
Usage:
    '$0' [-w|--wait] [--ssh-config-path PATH] [user@]hostname [project_dir]
    '$0' --help|-h
Arguments:
    [user@]hostname     ssh destination
    project_dir         Project directory path to open (remote).
                        If empty, project_dir is \$HOME of remote.
Options:
    -w|--wait                   Wait vscode window to be closed.
    --ssh-config-path STRING    ssh config path (default: ~/.ssh/config)

EOF
##### DO NOT change here #####
    # shellcheck disable=SC2086
    exit ${1-}
}

# Print usage to stderr and exit 1
usage_error_exit() {
    usage_exit 1 >&2
}

msg() {
    echo "$@" >&2
}

##### Change here #####
# Flag options
OPT_wait=0

# Option values with default
OPT_ssh_config_path="$HOME/.ssh/config"


##### DO NOT change here #####
# variable start with _ is temporary variable, it will be unset.
_args=
while [ $# -ne 0 ]; do
    # For debug
    : "$1"
    _short_opt_no_args=
    _short_opt_with_arg=
    case "$1" in
##### Change here #####
##### DO NOT FORGET #####
##### List short options that take no arguments #####
        -[w]*) # <<<=== Edit this
            _short_opt_no_args=1
            ;;
##### Change here #####
##### DO NOT FORGET #####
        # -[oO]*) # <<<=== Edit this
        #     _short_opt_with_arg=1
        #     ;;
    esac

    if [ "$_short_opt_no_args" = 1 ] || [ "$_short_opt_with_arg" = 1 ]; then
        # eg. $1 = -a
        # eg. _opt = -a
        # eg. _rest = ''

        # eg. $1 = -ab
        # eg. _opt = -a
        # eg. _rest = b

        _rest="${1#-?}"
        _opt=${1%"$_rest"}

        _hyphen_if_option=
        if [ "$_short_opt_no_args" = 1 ]; then
            _hyphen_if_option=-
        fi
        shift
        if [ -z "$_rest" ]; then
            set -- "$_opt" "$@"
        else
            set -- "$_opt" "${_hyphen_if_option}$_rest" "$@"
        fi
        unset _short_opt_no_args _short_opt_with_arg \
            _hyphen_if_option \
            _opt _rest
    fi

    case "$1" in
        --)
            shift
            break
            ;;
        -h|--help)
            usage_exit
            ;;
##### Change here #####
        --ssh-config-path)
            shift
            OPT_ssh_config_path=$1
            shift
            ;;
        -w|--wait)
            OPT_wait=1
            shift
            ;;
##### DO NOT change here #####
        -*)
            msg "Invalid option: $1"
            exit 1
            ;;
        *)
            _escaped=$(printf "%s" "$1" | sed "s/'/'\\\\''/g")
            _quoted=$(printf "'%s'" "$_escaped")
            _args="$_args $_quoted"
            unset _escaped _quoted
            shift
            ;;
    esac
done
eval set -- "$_args" '"$@"'
unset _args

##### Change here #####

# # Check argument number
# if [ $# -ne __ARG_NUM_YOU_SHOULD_GET__ ]; then
#     msg "Invalid argument numbers $#."
#     usage_error_exit
# fi


# end option parse

##### main script #####


ssh_destination=$1
shift

set -eu

wait_opt=
if [ "$OPT_wait" -eq 1 ]; then
    wait_opt=-w
fi

project_dir=${1-""}

# if $project_dir not start with '/':
if [ "${project_dir%%[^/]*}" != / ]; then
    # Make project_dir start with $HOME on remote.
    project_dir=$(ssh -F "$OPT_ssh_config_path" "$ssh_destination" pwd)/"$project_dir"
fi

# Fix remote.SSH.configFile of "settings.json" to "./ssh_config"
setting_json_path="$HOME/Library/Application Support/Code/User/settings.json"
cp -a "$setting_json_path" ~/.ssh/_vscode-settings-orig.json

if ! grep '"remote.SSH.configFile": ' ~/.ssh/_vscode-settings-orig.json >/dev/null 2>&1; then
    cp -a ~/.ssh/_vscode-settings-orig.json  ~/.ssh/_vscode-settings-orig-orig.json
    sed -e '$s/}/    "remote.SSH.configFile": ""\n}/' \
        < ~/.ssh/_vscode-settings-orig-orig.json \
        >| ~/.ssh/_vscode-settings-orig.json
    echo 'Add "remote.SSH.configFile" section to json.' >&2
fi

sed -e "s|\"remote.SSH.configFile\": .*|\"remote.SSH.configFile\": \"$OPT_ssh_config_path\",|g" \
< ~/.ssh/_vscode-settings-orig.json \
                >| "$setting_json_path"

# shellcheck disable=SC2086
echo code $wait_opt -n --folder-uri vscode-remote://ssh-remote+"$ssh_destination""$project_dir"
# shellcheck disable=SC2086
code $wait_opt -n --folder-uri vscode-remote://ssh-remote+"$ssh_destination""$project_dir"
