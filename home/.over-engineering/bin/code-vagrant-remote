#!/bin/sh

proj_dir=$1
set -eu

project_dir=
case "$proj_dir" in
        /*) project_dir=$proj_dir ;;
        .|./*) project_dir=/vagrant/$proj_dir ;;
        "") project_dir=/home/vagrant ;;
        *) project_dir=/home/vagrant/vscode-remote/$proj_dir;;
esac
unset proj_dir

current_dirname=$(basename "$(pwd)")

vag_poweroff=
vagrant status | grep ^default | grep running >/dev/null || vag_poweroff=1

vagrant up && vagrant ssh -- mkdir -p "$project_dir"

# Fix ssh_config
vagrant ssh-config | sed -e 's/^Host default$/'"Host $current_dirname"'/' >ssh_config
echo '  ForwardAgent yes' >>ssh_config

# Fix remote.SSH.configFile of "settings.json" to "./ssh_config"
setting_json_path="$(get-code-default-user-data-dir)/User/settings.json"
cp -a "$setting_json_path" ./_vscode-settings-orig.json &&
        < ./_vscode-settings-orig.json \
                sed -e 's|"remote.SSH.configFile": .*|"remote.SSH.configFile": "'"$(pwd)"'/ssh_config",|g' \
                        > "$setting_json_path"

if [ "$vag_poweroff" = 1 ];then
        echo
        echo code -nw --folder-uri vscode-remote://ssh-remote+"$current_dirname"/"$project_dir"
        echo 'Waiting for vscode finished...' >&2
        code -nw --folder-uri vscode-remote://ssh-remote+"$current_dirname"/"$project_dir"
        echo 'vscode finished or reloaded...' >&2
        vagrant ssh <<'EOF'
                while [ "$(ps -eo user,args | awk '$1 == "vagrant"' | grep [s]sh | wc -l)" != 1 ]; do
                        sleep 2
                done
EOF
        echo 'vscode finished. vagrant halt' >&2
        vagrant halt
else
        echo
        echo code -n --folder-uri vscode-remote://ssh-remote+"$current_dirname"/"$project_dir"
        code -n --folder-uri vscode-remote://ssh-remote+"$current_dirname"/"$project_dir"
        echo 'Please `vagrant halt` manually: ' >&2
fi
